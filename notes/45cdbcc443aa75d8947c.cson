type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Add Two numbers"
content: '''
  # Add Two numbers
  ### `6 -> 1 -> 7` = `716`
  ```java
  public ListNode addLists(ListNode l1, ListNode l2) {
          // write your code here
          int x = 0;
          int y = 0;
          int sum = 0;
          int carry = 0;
          ListNode dummy = new ListNode(0), curr = dummy;
          while(l1 != null || l2 != null){
              if(l1 == null){
                  x = 0;
              } else {
                  x = l1.val;
              }
              if(l2 == null){
                  y = 0;
              } else {
                  y = l2.val;
              }
              sum = x + y + carry;
              carry = sum / 10;
              curr.next = new ListNode(sum % 10);
              if(l1 != null){
                  l1 = l1.next;
              }
              if(l2 != null){
                  l2 = l2.next;
              }
              curr = curr.next;
          }
          if(carry != 0){
              curr.next = new ListNode(carry);
          }
          return dummy.next;
      }
  ```
  ### `6 -> 1 -> 7` = `617`
  ```java
  public class Solution {
      /*
       * @param l1: The first list.
       * @param l2: The second list.
       * @return: the sum list of l1 and l2.
       */
      public ListNode addLists2(ListNode l1, ListNode l2) {
          // write your code here
          l1 = reverse(l1);
          l2 = reverse(l2);
          return reverse(addLists(l1, l2));
      }
      
      public ListNode reverse(ListNode head){
          ListNode prev = null;
          while(head != null){
              ListNode temp = head.next;
              head.next = prev;
              prev = head;
              head = temp;
          }
          return prev;
      }
      
      public ListNode addLists(ListNode l1, ListNode l2) {
          // write your code here
          int x = 0;
          int y = 0;
          int sum = 0;
          int carry = 0;
          ListNode dummy = new ListNode(0), curr = dummy;
          while(l1 != null || l2 != null){
              if(l1 == null){
                  x = 0;
              } else {
                  x = l1.val;
              }
              if(l2 == null){
                  y = 0;
              } else {
                  y = l2.val;
              }
              sum = x + y + carry;
              carry = sum / 10;
              curr.next = new ListNode(sum % 10);
              if(l1 != null){
                  l1 = l1.next;
              }
              if(l2 != null){
                  l2 = l2.next;
              }
              curr = curr.next;
          }
          if(carry != 0){
              curr.next = new ListNode(carry);
          }
          return dummy.next;
      }
  }
  ```
  
  
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-10-24T23:51:25.050Z"
updatedAt: "2017-10-24T23:52:48.771Z"
