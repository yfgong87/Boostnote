type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Binary Search Tree Iterator"
content: '''
  # Binary Search Tree Iterator
  找出下一个`smallest`，平均`O(1)`，空间`O(h)`，`h`为树高
  ```java
  /**
   * Definition for binary tree
   * public class TreeNode {
   *     int val;
   *     TreeNode left;
   *     TreeNode right;
   *     TreeNode(int x) { val = x; }
   * }
   */
  
  public class BSTIterator {
      Stack<TreeNode> stack = new Stack<>();
      public BSTIterator(TreeNode root) {
          while(root != null){
              stack.push(root);
              root = root.left;
          }
      }
  
      /** @return whether we have a next smallest number */
      public boolean hasNext() {
          return !stack.isEmpty();
      }
  
      /** @return the next smallest number */
      public int next() {
          TreeNode head = stack.pop();
          int smallest = head.val;
          head = head.right;
          while(head != null){
              stack.push(head);
              head = head.left;
          }
          return smallest;
      }
  }
  
  /**
   * Your BSTIterator will be called like this:
   * BSTIterator i = new BSTIterator(root);
   * while (i.hasNext()) v[f()] = i.next();
   */
   ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-11-05T03:56:07.570Z"
updatedAt: "2017-11-05T03:57:08.860Z"
