type: "MARKDOWN_NOTE"
folder: "c7615b6dcc7b2832aa16"
title: "Java Operater Precedence"
content: '''
  # Java Operater Precedence
  | Category | Operator | Associativity|
  | ------   | ------   | ------       |
  | Postfix	| `() [] . (dot operator) ` | 	Left to right| 
  | Unary	|  `++ -- ! ~	`| Right to left| 
  | Multiplicative	|` * / %`	|  Left to right| 
  | Additive	| `+ -`	| Left to right| 
  | Shift	| `>> >>> <<`	| Left to right| 
  | Relational	| `> >= < <=`	| Left to right| 
  | Equality	| `== !=`	| Left to right| 
  | Bitwise AND	| `&`	| Left to right| 
  | Bitwise XOR	| `^`	| Left to right| 
  | Bitwise OR	| `|`	| Left to right| 
  | Logical AND |	`&&`| 	Left to right| 
  | Logical OR	| `||`	| Left to right| 
  | Conditional	| `?:`	| Right to left| 
  | Assignment	| `= += -= *= /= %= >>= <<= &= ^= |=`	| Right to left| 
  
  # Tricks
  - `&&` then `||`
  - `a` `>>` `1` is equal to `a / 2`
  - `a` `<<` `1` is equal to `a * 2`
  - `a` `<<` `n` is equal to `a * 2`<sup>`n`</sup>
  # Modulo
  - The range of numbers for an integer modulo of n is 0 to n âˆ’ 1. i.e. M % N = (0, N-1)
  
  # Bitwise operator
  ```java
  public class Test {
  
     public static void main(String args[]) {
        int a = 60;	/* 60 = 0011 1100 */
        int b = 13;	/* 13 = 0000 1101 */
        int c = 0;
  
        c = a & b;        /* 12 = 0000 1100 */
  
        c = a | b;        /* 61 = 0011 1101 */
  
        c = a ^ b;        /* 49 = 0011 0001 */
  
        c = ~a;           /*-61 = 1100 0011 */
  
        c = a << 2;       /* 240 = 1111 0000 */
  
        c = a >> 2;       /* 15 = 1111 */
  
        c = a >>> 2;      /* 15 = 0000 1111 */
     }
  }
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-02T21:48:20.922Z"
updatedAt: "2017-08-25T04:17:47.834Z"
