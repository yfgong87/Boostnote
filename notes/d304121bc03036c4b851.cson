createdAt: "2017-12-31T16:30:03.183Z"
updatedAt: "2018-01-22T21:02:18.310Z"
type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Odd Even LinkedList"
content: '''
  # Odd Even LinkedList
  Given `1->2->3->4->5->NULL`,
  return `1->3->5->2->4->NULL`.
  Please note here we are talking about the `node number` and not the value in the nodes
  
  Solution:
  Use two dummyNode, one for all the odd node, the other for all the even node. Iterate through the LinkedList, add corresponding node to either odd or even dummyNode. In the end concatenate the end of odd list with head of even list.
  
  ```java
  class Solution {
      public ListNode oddEvenList(ListNode head) {
          if(head == null){
              return null;
          }
          ListNode odd = head;
          ListNode even = head.next;
          ListNode evenHead = head.next;
          while(even != null && even.next != null){
              odd.next = even.next;
              odd = odd.next;
              even.next = odd.next;
              even = even.next;
          }
          odd.next = evenHead;
          return head;
      }
  }
  ```
  ![algorithm](https://leetcode.com/problems/odd-even-linked-list/Figures/328_Odd_Even.svg)
'''
tags: [
  "LinkedList"
]
isStarred: false
isTrashed: false
