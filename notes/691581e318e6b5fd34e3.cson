type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Subsets"
content: '''
  # Subsets
  ```java
  class Solution {
      /**
       * @param S: A set of numbers.
       * @return: A list of lists. All valid subsets.
       */
      public ArrayList<ArrayList<Integer>> subsets(int[] nums) {
          // write your code here
          //ArrayList of Integer ArrayList that store all subset
          ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
          //Handling null input
          if(nums == null){
              return result;
          }
          List<Integer> subset = new ArrayList<Integer>();
          //KEY1: Handling empty input
          if(nums.length == 0){
              result.add(subset);
              return result;
          }
          //KEY2: Sort array to ensure no duplication
          Arrays.sort(nums);
          //Call recursion methods
          addSubset(result, subset, 0, nums);
          //return
          return result;
      }
          
      // recursion methods
      public void addSubset(ArrayList<ArrayList<Integer>> result, 
                            ArrayList<Integer> subset, 
                            int index, 
                            int[] nums){
          //KEY3: DEEP COPY - add subset to result
          result.add(new ArrayList<Integer>(subset));
          //KEY4: use startindex
          for(int i = index; i < nums.length; i++){
              //add next number in array to subset
              subset.add(nums[i]);
              //KEY5: i + 1 to remove duplicate with diff order
              addSubset(result, subset, i + 1, nums);
              //backtracking
              subset.remove(subset.size()-1);
          }
      }
  }
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-30T14:47:38.610Z"
updatedAt: "2017-08-30T14:51:21.988Z"
