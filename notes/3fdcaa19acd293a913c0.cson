createdAt: "2018-01-09T17:09:23.554Z"
updatedAt: "2018-01-09T17:12:05.175Z"
type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Single Number"
content: '''
  # Single Number
  Given an array of integers, every element appears twice except for one. Find that single one.
  ### HashMap解法
  Time: `O(n)`, Space `O(n)`
  ```java
  class Solution {
      public int singleNumber(int[] nums) {
          Map<Integer, Integer> map = new HashMap<>();
          for(int num : nums){
              if(!map.containsKey(num)){
                  map.put(num, 1);
              } else {
                  map.put(num, map.get(num) + 1);
              }
          }
          for(int num : nums){
              if(map.get(num) == 1){
                  return num;
              }
          }
          return -1;
      }
  }
  ```
  ### 位运算解法
  Time: `O(n)`, Space `O(1)`
  ```java
  class Solution {
      public int singleNumber(int[] nums) {
          if(nums == null || nums.length == 0){
              return -1;
          }
          int xor = nums[0];
          for(int i = 1; i < nums.length; i++){
              xor ^= nums[i];
          }
          return xor;
      }
  }
  ```
'''
tags: [
  "Bit"
  "HashMap"
]
isStarred: false
isTrashed: false
