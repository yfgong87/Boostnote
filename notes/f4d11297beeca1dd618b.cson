type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Divide Two Integers"
content: '''
  # Divide Two Integers
  - 基本思想是不断地减掉除数，直到为0为止。但是这样会太慢。
  - 我们可以使用2分法来加速这个过程。不断对除数*2，直到它比被除数还大为止。加倍的同时，也记录下cnt，将被除数减掉加倍后的值，并且结果+cnt。
  - 因为是2倍地加大，所以速度会很快，指数级的速度。
  - 另外要注意的是：最小值的越界问题。对最小的正数取abs，得到的还是它。。。 因为最小的正数的绝对值大于最大的正数（INT）
  - 所以，我们使用Long来接住这个集合就可以了。
  ```java
  public class Solution {
      
      /*
       * @param dividend: the dividend
       * @param divisor: the divisor
       * @return: the result
       */
      public int divide(int dividend, int divisor) {
          // write your code here
          if(dividend == 0){
              return 0;
          }
          if(divisor == 0){
              if(dividend > 0){
                  return Integer.MAX_VALUE;
              }
              if(dividend < 0){
                  return Integer.MIN_VALUE;
              }
          }
          if(dividend == Integer.MIN_VALUE && divisor == -1){
              return Integer.MAX_VALUE;
          }
          int isNegative = 1;
          if((dividend < 0 && divisor > 0) || (dividend > 0 && divisor < 0)){
              isNegative = -1;
          }
          long a = Math.abs((long)dividend);
          long b = Math.abs((long)divisor);
          int result = 0;
          while(a >= b){
              int count = 0;
              while(a >= b << count){
                  count++;
              }
              //先做+/-，再做<</>>，再做赋值
              a -= b << count - 1;
              result += 1 << count - 1;
          }
          return isNegative * result;
      }
  };
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-08T02:35:00.761Z"
updatedAt: "2017-09-08T02:35:54.344Z"
