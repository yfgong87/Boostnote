type: "MARKDOWN_NOTE"
folder: "c7615b6dcc7b2832aa16"
title: "Copy"
content: '''
  # Copy
  ### copy a value vs copy an object
  - In the Java context, we first need to make a distinction between "copying a value" and "copying an object".
  ```java
  int a = 1;
  int b = a;     // copying a value
  int[] s = new int[]{42};
  int[] t = s;   // copying a value (the object reference for the array above)
  
  StringBuffer sb = new StringBuffer("Hi mom");
  StringBuffer sb2 = new StringBuffer(sb); // copying an object.
  ```
  - In short, an assignment of a reference to a variable whose type is a reference type is "copying a value" where the value is the object reference. To copy an object, something needs to use `new`, either explicitly or under the hood.
  ---
  ### shallow copy vs deep copy
  - Shallow copying generally means copying only one level of an object, while deep copying generally means copying more than one level. 
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-02T02:47:30.261Z"
updatedAt: "2018-01-04T21:52:43.731Z"
