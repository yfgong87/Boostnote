type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Minimum & Maximum Depth of Binary Tree"
content: '''
  # Minimum & Maximum Depth of Binary Tree
  ### Min Depth
  写法一
  ```java
  public class Solution {
      /*
       * @param root: The root of binary tree
       * @return: An integer
       */
      public int minDepth(TreeNode root) {
          // write your code here
          if(root == null){
              return 0;
          }
          int left = minDepth(root.left);
          int right = minDepth(root.right);
  		//当 left 或 right 为 null 时如果依然选 Math.min 则一定会选到 0
  		//
  		//   1
  		//	/
  		// 2
  		//
  		// 1 的 MinDepth 不是 0，而是 1，可以与面试官确认
          if(root.left == null || root.right == null){
              return Math.max(left, right) + 1;
          }
          return Math.min(left, right) + 1;
      }
  }
  ```
  写法二
  ```java
  //考虑特例怎么做，当root.left为空 depth = 0 时，root到底是 depth = 1 还是 depth = 2 (正解)
  /*      1
           \\
            2
                          */
  public class Solution {
      /**
       * @param root: The root of binary tree.
       * @return: An integer.
       */
      public int minDepth(TreeNode root) {
          // write your code here
          if(root == null){
              return 0;
          }
          //注意与Maximum Depth区分，Min Depth时需要注意null子树
          int left = Integer.MAX_VALUE;
          int right = Integer.MAX_VALUE;
          if(root.left != null){
              left = minDepth(root.left);
          }
          if(root.right != null){
              right = minDepth(root.right);
          }
          return Math.min(left, right) + 1;
      }
  }
  ```
  ### Max Depth
  - 不存在上面的问题
  ```java
  public int maxDepth(TreeNode root) {
          // write your code here
          if(root == null){
              return 0;
          }
          int left = maxDepth(root.left);
          int right = maxDepth(root.right);
          return Math.max(left, right) + 1;
      }
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-01T01:41:53.508Z"
updatedAt: "2018-01-03T17:42:23.240Z"
