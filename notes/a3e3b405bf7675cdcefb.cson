type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Permutation"
content: '''
  # Permutation
  ```java
  class Solution {
      //                         []
      //       [1]              [2]             [3]
      //    [1,2][1,3]       [2,1][2,3]      [3,1][3,2]
      //  [1,2,3][1,3,2]   [2,1,3][2,3,1]   [3,1,2][3,2,1]
  
      public List<List<Integer>> permute(int[] nums) {
          List<List<Integer>> results = new ArrayList<List<Integer>>();
          if(nums == null || nums.length == 0){
              return results;
          }
          dfs(nums, results, new ArrayList<Integer>(), new boolean[nums.length]);
          return results;
      }
      
      public void dfs(int[] nums,
                      List<List<Integer>> results,
                      List<Integer> solution,
                      boolean[] visited){
          if(solution.size() == nums.length){
              results.add(new ArrayList<Integer>(solution));
              return;
          }
          for(int i = 0; i < nums.length; i++){
              if(visited[i]){
                  continue;
              }
              
              visited[i] = true;
              solution.add(nums[i]);
              dfs(nums, results, solution, visited);
              visited[i] = false;
              solution.remove(solution.size() - 1);
          }
      }
  }
  ```
'''
tags: [
  "DFS"
  "backtracking"
]
isStarred: false
isTrashed: false
createdAt: "2017-08-30T18:14:08.968Z"
updatedAt: "2018-01-02T02:58:08.541Z"
