type: "MARKDOWN_NOTE"
folder: "c7615b6dcc7b2832aa16"
title: "Interface"
content: '''
  # Interface
  ```java
  public interface Drivable{
    double PI = 3.14; //field in interface is CONSTANT and FINAL
    int getWheel();//public abstract is the default modifier
  } 
  public class Car implements Drivable{
    //RULE 1: must define EVERYTHING in interface
    //RULE 2: method MUST NOT be more restrictive than original method in interface
    public int getWheel();
  }
  ```
  ### Interface vs Superclass
  - Use an `interface`/`implements` if you want to define a `contract/default behavior`. I.e. X must take Y and return Z. It doesn't care how the code is doing that. 
  - A `class` can `implements` `MANY` `interface`.
  - Use an `abstract` `class` if you want to define default behaviour in non-abstract methods so that the endusers can reuse it without rewriting it again and again. 
  - A `class` can `extends` from only `ONE` other `class`. 
  - `abstract` `class` with only `abstract` `methods` = `interface`. 
  
  ### Why use Interface when having Superclass?
  [Nice Explaination on stackOverFlow](https://stackoverflow.com/questions/27777641/why-should-we-use-interface-if-we-can-simply-override-methods-of-the-superclass)
  - In short, to prevent `Diamond Problem` when inheriting can cause confusion
  - `interface` does NOT allow modification of its method, but a class can `implements` `MANY` `interface` to acquire desired function
  - `subclass` can modify or add method from `superclass`, but a `subclass` can `extends` `ONLY ONE` `superclass`
  
  ### How to implement an interface?
  ```java
  //Method 1 
  ArrayList<List<Integer>> list = new ArrayList<List<Integer>>();
  //Method 2
  List<List<Integer>> list = new ArrayList<List<Integer>>();
  //Method 3, not recommended
  List<List<Integer>> list = new ArrayList<>();
  //WRONG, Incompatible type error
  List<List<Integer>> list = new ArrayList<ArrayList<Integer>>();
  //WRONG, you can NEVER "new" an interface
  List<List<Integer>> list = new List<ArrayList<Integer>>();
  ```
  
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-12T16:38:38.775Z"
updatedAt: "2017-08-14T19:26:11.753Z"
