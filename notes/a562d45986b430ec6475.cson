type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Two Sum"
content: '''
  # Two Sum
  ---
  - Given an array of integers, return indices of the two numbers such that they add up to a specific target.
  
  - You may assume that each input would have exactly one solution, and you may not use the same element twice.
  
  - Example: Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1].
  ---
  
  ```java
  //HashMap Solution
  public class Solution {
      public int[] twoSum(int[] nums, int target) {
  		//<value, index>
          Map<Integer, Integer> map = new HashMap<Integer,Integer>();
          for (int i = 0; i < nums.length; i++){ 
              int answer = target - nums[i];
              if(map.containsKey(answer)){
  				//这里顺序可以保证，因为 map.get(answer) 一定是之前就先被放进了 Map，一定有 map.get(answer) < i
                  return new int[]{map.get(answer),i};
              }
              //put(key,value)
              map.put(nums[i],i);
          }
          throw new IllegalArgumentException("No two sum solution");
      }
  }
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-01T03:28:05.334Z"
updatedAt: "2017-12-18T19:47:06.192Z"
