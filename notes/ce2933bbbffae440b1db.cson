type: "MARKDOWN_NOTE"
folder: "8d19d56ee029f3fa592b"
title: "Word Abbreviation Set"
content: '''
  # Word Abbreviation Set
  Summary:
  I will use a map to store <abbr, List of word that has the same abbr>
  - When the given word's abbr is not found in the map, return `true`
  - Otherwise search the list of word, if the given word cannot be found in the list, return `false`
  - Otherwise, check if the list of the word has only the given word, if not, it means the abbr is not unique, return `false`
  时间复杂度：
  - `O(1)` to get abbr
  - `O(n)` to put all word in map
  - `O(1)` to check if unique
  空间复杂度：
  - `O(n)` + `O(number of unique abbr)`
  ```java
  
  /*
  <d2r, <deer, door>>
  <c2e, <cake>>
  <c2d, <card>>
  isUnique("deer") // return false， 因为 d2r 在词典中对应的词虽然有自己(deer)，但不唯一
  isUnique("cart") // return true，因为 cart 的 abbr 在词典中不存在，所以唯一
  isUnique("cane") // return false，因为 c2e 在词典中对应的词不是自己(cane)
  isUnique("make") // return true，因为 make 的 abbr 在词典中不存在，所以唯一
  
  <d2r, <deer>>
  isUnique("dear") // return false, 因为 d2r 在词典中对应的词不是自己(dear)
  */
  public class ValidWordAbbr {
      Map<String, Set<String>> map;
      /*
      * @param dictionary: a list of words
      */public ValidWordAbbr(String[] dictionary) {
          // do intialization if necessary
          //<d2r, <deer, door>>
          map = new HashMap<String, Set<String>>();
          for(String word : dictionary){
              String abbr = getAbbr(word);
              if(!map.containsKey(abbr)){
                  Set<String> set = new HashSet<String>();
                  map.put(abbr, set);
              }
              Set<String> set = map.get(abbr);
              set.add(word);
          }
      }
  
      /*
       * @param word: a string
       * @return: true if its abbreviation is unique or false
       */
      public boolean isUnique(String word) {
          // write your code here
          String abbr = getAbbr(word);
          if(!map.containsKey(abbr)){  //如果word的abbr根本就不在dict里，Unique
              return true;
          }
          Set<String> set = map.get(abbr);
          if(set.contains(word)){
              return set.size() == 1; //如果word在dict里且其abbr所对应的词在字典里唯一，Unique
          }
          return false;
      }
      
      public String getAbbr(String s){
          if(s.length() < 2){
              return s;
          }
          char[] sc = s.toCharArray();
          return "" + sc[0] + (sc.length - 2) + sc[sc.length - 1];
      }
  }
  
  /**
   * Your ValidWordAbbr object will be instantiated and called as such:
   * ValidWordAbbr obj = new ValidWordAbbr(dictionary);
   * boolean param = obj.isUnique(word);
   */
  
   ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-22T20:03:11.105Z"
updatedAt: "2017-12-25T02:56:29.841Z"
