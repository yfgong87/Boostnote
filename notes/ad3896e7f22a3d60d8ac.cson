createdAt: "2018-01-09T18:55:01.357Z"
updatedAt: "2018-01-09T18:55:31.567Z"
type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Array Partition I"
content: '''
  # Array Partition I
  Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.
  Input: `[1,4,3,2]`
  Output: `4`
  Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).
  ```java
  class Solution {
      public int arrayPairSum(int[] nums) {
          Arrays.sort(nums);
          int sum = 0;
          for(int i = 0; i < nums.length; i += 2){
              sum += nums[i];
          }
          return sum;
      }
  }
  ```
'''
tags: []
isStarred: false
isTrashed: false
