createdAt: "2018-01-03T01:19:06.404Z"
updatedAt: "2018-01-23T18:11:32.572Z"
type: "MARKDOWN_NOTE"
folder: "df7fbd4f413bd7e56cde"
title: "Validate Number"
content: '''
  # Validate Number
  What are considered as number?
  - `[0 - 9]`: `01`
  - `decimal`: `0.1`,`-0.1`,`1.`,`.1`,`0..1`
  - `scientific`: `1e10`, `1e-10`, `1e01`,`1ee10`,`10e`,`e10`
  - `mix`: `0.1e10`
  - Is trailing space counted as valid? How about space in the middle?
  
  Solutions:
  - Trim the String
  - Set flags for dots, e sign and number
  - If we see `[0-9]` we reset the number flags.
  - We can only see `.` if we didn’t see `e` or `.`.
  - We can only see `e` if we didn’t see `e` but we did see a number. We reset number flag.
  - We can only see `+` and `-` in the beginning and after an `e`
  - any other character break the validation.
  - In the and it is only valid if there was at least 1 number. Also if we do have an `e` then we need to have a number after it as well. So we need to make sure the number flag is `true`.
  
  So basically the number should match this regular expression:
  `[-+]?(([0-9]+(.[0-9]*)?)|.[0-9]+)(e[-+]?[0-9]+)?`
  
  Time Complexity: `O(n)`
  ```java
  class Solution {
      public boolean isNumber(String s) {
          // Valid: 
          // 2e10, 2e-10, 0.1, +2, -2, 2e+2, 46.e3, 
          // InValid: 
          // e9
          boolean hasDot = false;
  		boolean hasE = false;
          boolean hasNum = false;
          s = s.trim();
          char[] sc = s.toCharArray();
          for(int i = 0; i < s.length(); i++){
              if(sc[i] == '.'){
                  if(hasDot || hasE){
                      return false;
                  }
                  hasDot = true;
              } else if(sc[i] == 'e'){
                  if(hasE || !hasNum){
                      return false;
                  }
                  hasE = true;
                  hasNum = false;
              } else if(sc[i] <= '9' && sc[i] >= '0'){
                  hasNum = true;
              } else if(sc[i] == '+' || sc[i] == '-'){
                  if(i != 0 && sc[i - 1] != 'e'){
                      return false;
                  }
              } else {
                  return false;
              }
          }
          return hasNum;
      }
  }
  ```
  用 `Switch` 写
  ```java
  class Solution {
      public boolean isNumber(String s) {
          boolean hasNum = false;
          boolean hasDot = false;
          boolean hasE = false;
          s = s.trim();
          for(int i = 0; i < s.length(); i++){
              if(s.charAt(i) >= '0' && s.charAt(i) <= '9'){
                  hasNum = true;
                  continue;
              }
              switch(s.charAt(i)){
                  case '.':
                      if(hasDot || hasE){
                          return false;
                      } else {
                          hasDot = true;
                      }
                      break;
                  case 'e':
                      if(hasE || !hasNum){
                          return false;
                      } else {
                          hasE = true;
                          hasNum = false;
                      }
                      break;
                  case '+':
                      if(i != 0 && s.charAt(i - 1) != 'e'){
                          return false;
                      }
                      break;
                  case '-':
                      if(i != 0 && s.charAt(i - 1) != 'e'){
                          return false;
                      }
                      break;
                  default:
                      return false;
              }
          }
          return hasNum;
      }
  }
  ```
'''
tags: [
  "Linkedin"
]
isStarred: false
isTrashed: false
